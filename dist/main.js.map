{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-module/app-routing.module.ts","webpack:///./src/app/app-module/app.component.html","webpack:///./src/app/app-module/app.component.less","webpack:///./src/app/app-module/app.component.ts","webpack:///./src/app/app-module/app.module.ts","webpack:///./src/app/components/chart/chart.component.html","webpack:///./src/app/components/chart/chart.component.less","webpack:///./src/app/components/chart/chart.component.ts","webpack:///./src/app/components/currency/currency.component.html","webpack:///./src/app/components/currency/currency.component.less","webpack:///./src/app/components/currency/currency.component.ts","webpack:///./src/app/components/order-table/order-table.component.html","webpack:///./src/app/components/order-table/order-table.component.less","webpack:///./src/app/components/order-table/order-table.component.ts","webpack:///./src/app/components/top-bar/top-bar.component.html","webpack:///./src/app/components/top-bar/top-bar.component.less","webpack:///./src/app/components/top-bar/top-bar.component.ts","webpack:///./src/app/components/trading-view/trading-view.component.html","webpack:///./src/app/components/trading-view/trading-view.component.less","webpack:///./src/app/components/trading-view/trading-view.component.ts","webpack:///./src/app/crypto-exchange-module/hitbtc-api.service.ts","webpack:///./src/app/investing-module/indicators/ma.ts","webpack:///./src/app/investing-module/investing.module.ts","webpack:///./src/app/investing-module/investing.service.ts","webpack:///./src/app/investing-module/strategies/ThreeMA.strategy.ts","webpack:///./src/app/investing-module/strategies/abstractStrategy.ts","webpack:///./src/app/models/ChartFormats/CandlesChartFormat.ts","webpack:///./src/app/models/ChartFormats/ChartFormat.ts","webpack:///./src/app/models/ChartFormats/ScatterChartFormat.ts","webpack:///./src/app/models/CurrencyBalance.ts","webpack:///./src/app/models/SharedConstants.ts","webpack:///./src/app/services/balance.service.ts","webpack:///./src/app/services/candle.service.ts","webpack:///./src/app/services/indicator.service.ts","webpack:///./src/app/services/injectable-observables.service.ts","webpack:///./src/app/services/money-manager.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/libs/ws.service.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<div class=\\\"content\\\">\\r\\n  <top-bar></top-bar>\\r\\n  \\r\\n  <!-- <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar> -->\\r\\n  <!-- <router-outlet></router-outlet> -->\\r\\n  <div class=\\\"main-view\\\">\\r\\n    <div class=\\\"trading-view-container\\\">\\r\\n      <trading-view *ngFor=\\\"let symbol of config.availableSymbolsForInvesting\\\" [observableSymbol]=\\\"symbol.id\\\"></trading-view>\\r\\n    </div>\\r\\n    <div class=\\\"right-column\\\">\\r\\n      <order-table></order-table>\\r\\n    </div>\\r\\n\\r\\n    <!--<button (click)=\\\"stopWatching()\\\">Stop</button>-->\\r\\n    <!--<button (click)=\\\"getBalance()\\\">getBalance</button>-->\\r\\n    <!--<button (click)=\\\"getHistoryOrder()\\\">getHistoryOrder</button>-->\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".content .main-view {\\n  height: calc(100vh - 70px);\\n  overflow-y: hidden;\\n  display: flex;\\n  align-items: center;\\n  padding: 0 5px 0 10px;\\n}\\n.content .main-view .trading-view-container {\\n  height: calc(100vh - 70px);\\n  overflow-y: scroll;\\n  width: 910px;\\n}\\n.content .main-view .right-column {\\n  margin-left: auto;\\n  width: calc(100vw - 850px);\\n  height: 100%;\\n  overflow-y: scroll;\\n  padding: 40px 10px;\\n}\\n\"","import { Component } from '@angular/core';\r\nimport { InvestingService } from '../investing-module/investing.service';\r\nimport { CandleService } from '../services/candle.service';\r\nimport { InjectableObservablesService } from '../services/injectable-observables.service';\r\nimport { MoneyManagerService } from '../services/money-manager.service';\r\nimport { AvailableStrategies } from '../investing-module/strategies/abstractStrategy';\r\nimport { BalanceService } from '../services/balance.service';\r\n\r\nconst defaultConfig = {\r\n  availableSymbolsForInvesting: [\r\n   {\r\n    id: 'ETHUSD',\r\n    strategy: AvailableStrategies.ThreeMAStrategy,\r\n  },\r\n  {\r\n    id: 'BTCUSD',\r\n    strategy: AvailableStrategies.ThreeMAStrategy,\r\n  },\r\n  {\r\n    id: 'LTCUSD',\r\n    strategy: AvailableStrategies.ThreeMAStrategy,\r\n  },\r\n  {\r\n    id: 'ZECUSD',\r\n    strategy: AvailableStrategies.ThreeMAStrategy,\r\n  },\r\n  // {\r\n  //   id: 'ETHBTC',\r\n  //   strategy: AvailableStrategies.ThreeMAStrategy,\r\n  // },\r\n  // {\r\n  //   id: 'XMRUSD',\r\n  //   strategy: AvailableStrategies.ThreeMAStrategy,\r\n  // }\r\n  ],\r\n  currentInvestingSymbol: 'BTCUSD',\r\n  symbolInfo: {},\r\n};\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.less'],\r\n})\r\nexport class AppComponent {\r\n  public config: any = {...defaultConfig};\r\n\r\n  constructor(\r\n    private investingService: InvestingService,\r\n    private moneyManagerService: MoneyManagerService,\r\n    private candleService: CandleService,\r\n    private balanceService: BalanceService,\r\n    private injectableObservables: InjectableObservablesService,\r\n    ) {\r\n    this.injectableObservables.config$.next(this.config);\r\n    this.config.availableSymbolsForInvesting.forEach(symbol => {\r\n      this.candleService.connectToHitBtcApi(symbol.id);\r\n    });\r\n    this.injectableObservables.config$.subscribe((configUpdate: any) => this.config = {...this.config, ...configUpdate});\r\n  }\r\n\r\n  public stopWatching(): void {\r\n    this.investingService.stopWatching();\r\n  }\r\n\r\n  public getBalance(): void {\r\n    this.investingService.getBalance();\r\n  }\r\n\r\n  public getHistoryOrder(): void {\r\n    this.investingService.getHistoryOrder();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {\r\n  MatProgressBarModule,\r\n  MatButtonModule,\r\n  MatTableModule,\r\n} from '@angular/material/';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { InvestingModule } from '../investing-module/investing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ChartComponent } from '../components/chart/chart.component';\r\nimport { TradingViewComponent } from '../components/trading-view/trading-view.component';\r\n\r\nimport { InjectableObservablesService } from '../services/injectable-observables.service';\r\nimport { OrderTableComponent } from '../components/order-table/order-table.component';\r\nimport { CurrencyComponent } from '../components/currency/currency.component';\r\nimport { TopBarComponent } from '../components/top-bar/top-bar.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ChartComponent,\r\n    TradingViewComponent,\r\n    OrderTableComponent,\r\n    CurrencyComponent,\r\n    TopBarComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    InvestingModule,\r\n    MatProgressBarModule, MatButtonModule, MatTableModule\r\n  ],\r\n  providers: [InjectableObservablesService],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div [id]=\\\"'displayPlot' + chartID\\\"></div>\\r\\n\"","module.exports = \"\"","import { Component, SimpleChanges, Input, OnChanges } from '@angular/core';\r\nimport Plotly from 'plotly.js-dist';\r\nimport { ChartFormat } from '../../models/ChartFormats/ChartFormat';\r\nimport { Candle } from '../../models/Candle';\r\n\r\n@Component({\r\n  selector: 'chart',\r\n  templateUrl: './chart.component.html',\r\n  styleUrls: ['./chart.component.less'],\r\n})\r\n\r\nexport class ChartComponent implements OnChanges {\r\n  @Input() public plots;\r\n  @Input() public chartID;\r\n\r\n  private colorPalet: any = {};\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['plots'] ) {\r\n      this.plots = changes.plots.currentValue;\r\n      this.plots.filter(plot => plot.type === 'scatter').forEach(plot => plot.marker = { color: this.getColor(plot.name)});\r\n      this.plots.forEach(plot => plot.x = plot.x.map(xAxis => new Date(xAxis)));\r\n      this.drawPlot(this.plots);\r\n      this.adjustWidth();\r\n    }\r\n  }\r\n\r\n  private drawPlot(plots: ChartFormat[]): void {\r\n    const gridcolor = 'rgb(54, 60, 78)';\r\n    const paperColor = 'rgb(19, 23, 34)';\r\n    const axisColor = 'rgb(192, 192, 194)';\r\n\r\n    if (!Object.keys(plots).length) {\r\n      return;\r\n    }\r\n\r\n    const layout = {\r\n      dragmode: 'zoom',\r\n      height: 400,\r\n      margin: {\r\n        r: 10,\r\n        t: 25,\r\n        b: 40,\r\n        l: 60,\r\n      },\r\n      paper_bgcolor: paperColor,\r\n      plot_bgcolor: paperColor,\r\n      showlegend: false,\r\n      width: 700,\r\n      xaxis: {\r\n        autorange: true,\r\n        gridcolor,\r\n        rangeslider: {visible: false},\r\n        tickcolor: axisColor,\r\n        tickfont: {\r\n          color: axisColor,\r\n          size: 12,\r\n        },\r\n        type: 'date',\r\n      },\r\n      yaxis: {\r\n        // dtick: 0.5,\r\n        fixedrange: false,\r\n        gridcolor,\r\n        side: 'right',\r\n        tickcolor: axisColor,\r\n        tickfont: {\r\n          color: axisColor,\r\n          size: 18,\r\n        },\r\n      },\r\n    };\r\n    Plotly.newPlot(`displayPlot${this.chartID}`, plots, layout);\r\n  }\r\n\r\n  private getColor(name: string): string {\r\n    const availableColors = ['rgb(58, 133, 173)', 'rgb(255, 0, 255)', 'rgb(238, 239, 2)', 'DarkMagenta', 'Chartreuse'];\r\n    if (!this.colorPalet.hasOwnProperty(name)) {\r\n      this.colorPalet[name] = Object.keys(this.colorPalet).length % availableColors.length;\r\n    }\r\n    return availableColors[this.colorPalet[name]];\r\n  }\r\n\r\n  private adjustWidth(): void {\r\n    const svgElements = document.getElementsByClassName('main-svg');\r\n    [].forEach.call(svgElements, (svgElement) => {\r\n      svgElement.attributes.width.value = 800;\r\n    });\r\n  }\r\n\r\n  private convertTimeToCurrentTimezone(candle: Candle): Date {\r\n    return new Date(candle.timestamp);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"mat-raised-button\\\">\\r\\n  {{currencyBalance.currency}}:\\r\\n  {{currencyBalance.available | number:'1.1-5'}}\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, Input } from '@angular/core';\r\nimport { CurrencyBalance } from '../../models/CurrencyBalance';\r\n\r\n@Component({\r\n  selector: 'currency',\r\n  templateUrl: './currency.component.html',\r\n  styleUrls: ['./currency.component.less'],\r\n})\r\nexport class CurrencyComponent {\r\n  @Input() public currencyBalance: CurrencyBalance;\r\n  constructor() { }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"position\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Weight Column -->\\r\\n    <ng-container matColumnDef=\\\"weight\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.weight}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Symbol Column -->\\r\\n    <ng-container matColumnDef=\\\"symbol\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.symbol}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","module.exports = \"table {\\n  width: 100%;\\n}\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatTableDataSource } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'order-table',\r\n  templateUrl: './order-table.component.html',\r\n  styleUrls: ['./order-table.component.less'],\r\n})\r\nexport class OrderTableComponent implements OnInit {\r\n  public displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\r\n  public dataSource = new MatTableDataSource<IPeriodicElement>(ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) public paginator: MatPaginator;\r\n\r\n  public ngOnInit(): void {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n}\r\n\r\nexport interface IPeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: IPeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\r\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\r\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\r\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\r\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\r\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\r\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\r\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\r\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\r\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\r\n];\r\n","module.exports = \"<div class=\\\"wrapper\\\">\\r\\n  <div class=\\\"align\\\">\\r\\n    <div class=\\\"currency-wrapper\\\">\\r\\n      <currency *ngFor=\\\"let currencyBalance of balanceList\\\" [currencyBalance]=\\\"currencyBalance\\\"></currency>\\r\\n    </div>\\r\\n    <nav>\\r\\n      <a mat-raised-button routerLink=\\\"/trading\\\" routerLinkActive=\\\"active\\\">Trading</a>\\r\\n      <a mat-raised-button routerLink=\\\"/statistics\\\" routerLinkActive=\\\"active\\\">Statistics</a>\\r\\n    </nav>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".align {\\n  display: flex;\\n  width: 1600px;\\n}\\n.wrapper {\\n  background-color: #3f51b5;\\n  box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.2), 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12);\\n  display: flex;\\n  height: 56px;\\n  justify-content: space-around;\\n  padding: 0 20px;\\n}\\n.wrapper .align {\\n  justify-content: space-between;\\n  -ms-grid-row-align: center;\\n      align-self: center;\\n}\\n.wrapper .align .currency-wrapper {\\n  display: flex;\\n  justify-content: space-between;\\n  width: 100%;\\n}\\n.wrapper .align h1 {\\n  -ms-grid-row-align: center;\\n      align-self: center;\\n  color: #fff;\\n  font-size: 28px;\\n  margin: 0 20px;\\n}\\n.wrapper .align nav {\\n  align-items: center;\\n  display: flex;\\n}\\n.wrapper .align nav a {\\n  margin: 0 8px;\\n}\\n\"","import { Component } from '@angular/core';\r\nimport { InjectableObservablesService } from '../../services/injectable-observables.service';\r\nimport { CurrencyBalance } from '../../models/CurrencyBalance';\r\n\r\n@Component({\r\n  selector: 'top-bar',\r\n  styleUrls: ['./top-bar.component.less'],\r\n  templateUrl: './top-bar.component.html',\r\n})\r\nexport class TopBarComponent {\r\n  public balanceList: CurrencyBalance[] = [];\r\n\r\n  constructor(\r\n    private injectableObservables: InjectableObservablesService,\r\n  ) {\r\n    injectableObservables.balance$.subscribe((balanceUpdate: CurrencyBalance[]) => this.handleBalanceUpdate(balanceUpdate));\r\n  }\r\n\r\n  private handleBalanceUpdate(balance: CurrencyBalance[] ): void {\r\n    this.balanceList = balance;\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"wrapper\\\">\\r\\n   <mat-progress-bar *ngIf=\\\"!plots.length\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n  <chart [plots]=\\\"plots\\\" [chartID]=\\\"observableSymbol\\\"></chart>\\r\\n  <div class=\\\"observable-symbol\\\">{{observableSymbol}}</div>\\r\\n</div>\\r\\n\"","module.exports = \".wrapper {\\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.1);\\n  margin: 10px;\\n  padding: 10px;\\n}\\n.wrapper .observable-symbol {\\n  text-align: center;\\n  padding-top: 10px;\\n  font-weight: bolder;\\n}\\n\"","import { Component, Input } from '@angular/core';\r\nimport { Candle } from '../../models/Candle';\r\nimport { ChartFormat } from '../../models/ChartFormats/ChartFormat';\r\nimport { CandlesChartFormat } from '../../models/ChartFormats/CandlesChartFormat';\r\nimport { InjectableObservablesService } from '../../services/injectable-observables.service';\r\nimport { IndicatorPlotModel } from '../../services/indicator.service';\r\nimport { ISavedCandles } from '../../services/candle.service';\r\nimport { ScatterChartFormat } from '../../models/ChartFormats/ScatterChartFormat';\r\n\r\n@Component({\r\n  selector: 'trading-view',\r\n  templateUrl: './trading-view.component.html',\r\n  styleUrls: ['./trading-view.component.less'],\r\n})\r\n\r\nexport class TradingViewComponent {\r\n  @Input() public observableSymbol: string;\r\n\r\n  private savedCandles: Candle[] = [];\r\n  private savedIndicators: {\r\n    [indicatorName: string]: ScatterChartFormat;\r\n  } = {};\r\n\r\n  public plots: ChartFormat[] = [];\r\n\r\n  constructor(\r\n    injectableObservables: InjectableObservablesService,\r\n  ) {\r\n    injectableObservables.candles$.subscribe(\r\n      (candlesUpdate: ISavedCandles) => this.handleCandlesUpdate(candlesUpdate),\r\n      e => this.handleError(e),\r\n      () => this.handleOnComplete());\r\n\r\n   injectableObservables.indicator$.subscribe(\r\n      (indicatorsUpdate: IndicatorPlotModel) => this.handleIndicatorsUpdate(indicatorsUpdate),\r\n      e => this.handleError(e),\r\n      () => this.handleOnComplete());\r\n  }\r\n\r\n  private handleCandlesUpdate(newCandles: ISavedCandles): void {\r\n    const candles = newCandles[this.observableSymbol] || [];\r\n    this.savedCandles = [...candles];\r\n    this.reDrawPlots();\r\n  }\r\n\r\n  private handleIndicatorsUpdate(indicators: IndicatorPlotModel): void {\r\n    this.savedIndicators = {...indicators[this.observableSymbol]};\r\n    this.reDrawPlots();\r\n  }\r\n\r\n  private reDrawPlots(): void {\r\n    const viewingAmount = 35;\r\n    const indicators: ChartFormat[] = Object.values(this.savedIndicators);\r\n    indicators.forEach(indicator => {\r\n      indicator.x = indicator.x.slice(-viewingAmount);\r\n      indicator.y = indicator.y.slice(-viewingAmount);\r\n    });\r\n    const showingCandles = this.mapCandleToChartFormat(this.savedCandles.slice(-viewingAmount));\r\n    this.plots = [showingCandles, ...indicators];\r\n  }\r\n\r\n  private mapCandleToChartFormat(candles: Candle[]): CandlesChartFormat {\r\n    return Object.assign(new CandlesChartFormat(), {\r\n      x: candles.map(candle => candle.timestamp),\r\n      open: candles.map(candle => candle.open),\r\n      close: candles.map(candle => candle.close),\r\n      high: candles.map(candle => candle.max),\r\n      low: candles.map(candle => candle.min),\r\n    });\r\n  }\r\n\r\n  private handleError(e: Error): void {\r\n    console.error('Error in TradingViewComponent in injectableObservables:', e);\r\n  }\r\n\r\n  private handleOnComplete(): void {\r\n    console.log('InjectableObservablesService onCompleted');\r\n  }\r\n}\r\n","import { AbstractCryptoService } from './abstract-crypto-service';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { WSService } from '../../libs/ws.service';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { InjectableObservablesService } from '../services/injectable-observables.service';\r\nimport { Symbol } from '../models/Symbol';\r\nimport { CurrencyBalance } from '../models/CurrencyBalance';\r\n\r\nconst socketURL = 'wss://api.hitbtc.com/api/2/ws';\r\nconst backendPoint = 'http://localhost:8080/backend';\r\nconst restEndPoint = 'https://api.hitbtc.com/api/2/public';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class HitBTCApi implements AbstractCryptoService {\r\n  private ws: {\r\n    [symbol: string]: WSService,\r\n  } = {};\r\n  private period: string = 'M1';\r\n  private config: any = {};\r\n  private requiredCurrencies: any;\r\n\r\n  constructor(\r\n      private http: HttpClient,\r\n      private injectableObservables: InjectableObservablesService,\r\n    ) {\r\n    console.log('HitBTCApi working');\r\n    this.injectableObservables.config$.subscribe((configUpdate: any) => {\r\n      this.config = {...configUpdate};\r\n      this.requiredCurrencies = Object.values(this.config.symbolInfo)\r\n        .reduce((array: string[], symbolInfo: Symbol ) => [...array, symbolInfo.baseCurrency, symbolInfo.quoteCurrency], []);\r\n  });\r\n  }\r\n\r\n  public createConnection(symbol: string): void {\r\n    console.log('create connection');\r\n    this.ws[symbol] = new WSService(socketURL);\r\n  }\r\n\r\n  public subscribeCandles(symbol: string, period: string = this.period): void {\r\n    this.ws[symbol].send({\r\n      method: 'subscribeCandles',\r\n      params: {\r\n        symbol,\r\n        period,\r\n      },\r\n      id: 123,\r\n    });\r\n  }\r\n\r\n  public subscribeTrades(symbol: string): void {\r\n    this.ws[symbol].send({\r\n      method: 'subscribeTrades',\r\n      params: {\r\n        symbol,\r\n      },\r\n      id: 123,\r\n    });\r\n  }\r\n\r\n  public getSymbolDescription(symbol: string): Observable<any> {\r\n    return this.http.get(`${backendPoint}/symbol/${symbol}`)\r\n      .pipe(\r\n        tap(response => console.log(`Backend response getSymbolDescription: \\n ${response}`)),\r\n      );\r\n  }\r\n\r\n  public getOrderbook(symbol: string): any {\r\n    return this.http.get(`${backendPoint}/getOrderbook/${symbol}`)\r\n      .pipe(\r\n        tap(response => console.log(`Backend response getOrderbook: \\n ${response}`)),\r\n      );\r\n  }\r\n\r\n  public onMessage(symbol: string): Observable<MessageEvent> {\r\n    return this.ws[symbol].onMessage();\r\n  }\r\n\r\n  public closeConnection(symbol?: string, delay: number = 0): void {\r\n    if (symbol) {\r\n      setTimeout(() => this.ws[symbol].closeConnection(), delay);\r\n    } else {\r\n      Object.values(this.ws).forEach((wsConnection: WSService) => wsConnection.closeConnection());\r\n    }\r\n  }\r\n\r\n  public getBalance(): Observable<CurrencyBalance[]> {\r\n    return this.http.get(`${backendPoint}/trading/balance`)\r\n      .pipe(\r\n        map((response: any) => JSON.parse(response)\r\n          .filter((currency: CurrencyBalance) =>\r\n            !!(this.requiredCurrencies.includes(currency.currency) || +currency.available || +currency.reserved)),\r\n        ),\r\n        tap(response => console.log(`Backend response getBalance: \\n ${response}`)),\r\n      );\r\n  }\r\n\r\n  public getHistoryOrder(): any {\r\n    return this.http.get(`${backendPoint}/history/order`)\r\n      .pipe(\r\n        map((response: any) => JSON.parse(response)),\r\n        tap(response => console.log(`Backend response getHistoryOrder: \\n ${response}`)),\r\n      );\r\n  }\r\n}\r\n","export class MA {\r\n  private readonly period: number;\r\n\r\n  constructor(period: number = 9) {\r\n    this.period = period;\r\n  }\r\n\r\n  public calculate(prices: number[]): number {\r\n    return prices.slice(-this.period).reduce((total, value) => total + value) / this.period;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InvestingService } from './investing.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  providers: [InvestingService],\r\n})\r\nexport class InvestingModule { }\r\n","import { first } from 'rxjs/operators';\r\nimport { HitBTCApi } from '../crypto-exchange-module/hitbtc-api.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { InjectableObservablesService } from '../services/injectable-observables.service';\r\nimport { Orderbook } from '../models/Orderbook';\r\nimport { Side } from '../models/SharedConstants';\r\nimport { AvailableStrategies, Strategy } from './strategies/abstractStrategy';\r\nimport { ThreeMAStrategy } from './strategies/ThreeMA.strategy';\r\nimport { IndicatorService } from '../services/indicator.service';\r\nimport { IMoneyUpdate } from '../services/money-manager.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class InvestingService {\r\n  private actualOpenTime = null;\r\n  private strategy: Strategy;\r\n  private openedTrade = null;\r\n  private money: number = 1000;\r\n  private config: any = {};\r\n  private savedAdvice: {\r\n    [symbol: string]: IMoneyUpdate,\r\n  } = {};\r\n\r\n  constructor(\r\n      private injectableObservables: InjectableObservablesService,\r\n      private indicatorService: IndicatorService,\r\n      private hitBTCApiService: HitBTCApi,\r\n    ) {\r\n    console.log('InvestingService working');\r\n\r\n    this.injectableObservables.config$\r\n      .pipe(first())\r\n      .subscribe((config: any) => this.handleConfigUpdate(config));\r\n    this.injectableObservables.positionAction$.subscribe((actionUpdate: any) => this.handleActionUpdate(actionUpdate));\r\n    this.injectableObservables.moneyAction$.subscribe((moneyUpdate: any) => this.handleMoneyUpdate(moneyUpdate));\r\n  }\r\n\r\n  private handleConfigUpdate(config: any): void {\r\n    this.config = config;\r\n    config.availableSymbolsForInvesting.forEach(symbol => {\r\n      this.createStrategyInstance(symbol);\r\n    });\r\n  }\r\n\r\n  private handleMoneyUpdate(moneyUpdate: IMoneyUpdate): void {\r\n    if (!moneyUpdate.amount) {\r\n      return;\r\n    } else if (!this.savedAdvice[moneyUpdate.symbolID] ||\r\n      this.savedAdvice[moneyUpdate.symbolID].advisedResult !== moneyUpdate.advisedResult ||\r\n      +new Date(moneyUpdate.timestamp) !== +new Date(this.savedAdvice[moneyUpdate.symbolID].timestamp)) {\r\n        this.savedAdvice[moneyUpdate.symbolID] = moneyUpdate;\r\n        console.log(this.savedAdvice);\r\n    }\r\n  }\r\n\r\n  private createStrategyInstance(symbol: any): Strategy {\r\n    let StrategyConstructor;\r\n    switch (symbol.strategy as AvailableStrategies) {\r\n      case 'ThreeMAStrategy':\r\n        StrategyConstructor = ThreeMAStrategy;\r\n        break;\r\n    }\r\n    return new StrategyConstructor(symbol.id, this.injectableObservables, this.indicatorService);\r\n  }\r\n\r\n  private handleActionUpdate(action: {time: string, side: Side}): void {\r\n    // console.log(action);\r\n    this.hitBTCApiService.getOrderbook(this.config.investingSymbol).pipe(\r\n      first(),\r\n    ).subscribe((orderbook: Orderbook) => {\r\n      console.log(orderbook);\r\n      if (action.side === Side.buy && !this.openedTrade && !this.actualOpenTime) {\r\n        this.actualOpenTime = new Date(action.time);\r\n        this.actualOpenTime.setMinutes(this.actualOpenTime.getMinutes() + this.config.shiftForOpening);\r\n      } else if (+this.actualOpenTime === +new Date(action.time)) {\r\n        this.openPosition(action.time, +orderbook.bid[0].price);\r\n      } else if (action.side === Side.sell && this.openedTrade) {\r\n        this.closePosition(action.time, +orderbook.ask[0].price);\r\n      } else if (this.shouldBeClosedEarly(+orderbook.ask[0].price)) {\r\n        this.closePosition(action.time, +orderbook.ask[0].price);\r\n      }\r\n    });\r\n  }\r\n\r\n  private openPosition(time: string, bidPrice: number): void {\r\n    console.log('Open: ' + time);\r\n    const openPrice = bidPrice - this.config.tickSize *  2;\r\n    this.openedTrade = {\r\n      time,\r\n      openPrice,\r\n      value: this.money / openPrice,\r\n    };\r\n    console.log(this.openedTrade);\r\n    this.actualOpenTime = null;\r\n  }\r\n\r\n  private closePosition(time: string, askPrice: number): void {\r\n    console.log('Close: ' + time);\r\n    const closePrice = askPrice + this.config.tickSize * 2;\r\n    this.money = this.openedTrade.value * closePrice;\r\n    this.openedTrade = null;\r\n    console.log(this.money);\r\n  }\r\n\r\n  private shouldBeClosedEarly(askPrice: number): boolean {\r\n    if (!this.openedTrade) {\r\n      return false;\r\n    }\r\n    const openPrice = this.openedTrade.openPrice;\r\n    if (\r\n      (openPrice - askPrice) / openPrice > this.config.allowedLost ||\r\n      (askPrice - openPrice) / openPrice > this.config.enoughProfit\r\n    ) {\r\n      console.log('Closing due to > allowedLost of enoughProfit');\r\n      return true;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public stopWatching(): void {\r\n    this.hitBTCApiService.closeConnection();\r\n  }\r\n\r\n  public getBalance(): void {\r\n    this.hitBTCApiService.getBalance().subscribe(res => {\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  public getHistoryOrder(): void {\r\n    this.hitBTCApiService.getHistoryOrder().subscribe(res => {\r\n      console.log(res);\r\n    });\r\n  }\r\n}\r\n","import { Side } from '../../models/SharedConstants';\r\nimport { MA } from '../indicators/ma';\r\nimport { Candle } from '../../models/Candle';\r\nimport { InjectableObservablesService } from '../../services/injectable-observables.service';\r\nimport { Strategy } from './abstractStrategy';\r\nimport { IndicatorService } from '../../services/indicator.service';\r\nimport { ISavedCandles } from '../../services/candle.service';\r\n\r\nexport class ThreeMAStrategy implements Strategy {\r\n  private field: string = 'close';\r\n  private timestamp: string;\r\n\r\n  private MAShort: MA = new MA(9);\r\n  private MAMiddle: MA = new MA(13);\r\n  private MALong: MA = new MA(21);\r\n\r\n  constructor(\r\n    private symbolID: string,\r\n    private injectableObservables: InjectableObservablesService,\r\n    private indicatorService: IndicatorService,\r\n  ) {\r\n    console.log('Strategy ThreeMAStrategy started');\r\n    injectableObservables.candles$.subscribe((candlesUpdate: ISavedCandles) => this.handleCandlesUpdate(candlesUpdate));\r\n  }\r\n\r\n  private handleCandlesUpdate(candlesUpdate: ISavedCandles): void {\r\n    // console.log(`${this.symbolID} - ${this.timestamp}`);\r\n    // console.log(candlesUpdate);\r\n    const candles = candlesUpdate[this.symbolID] || [];\r\n    if (!candles.length) {\r\n      return;\r\n    }\r\n    this.timestamp = candles[candles.length - 1].timestamp;\r\n    const advisedResult = this.advisedInvestingSide(candles);\r\n    this.injectableObservables.strategyAction$.next({\r\n      symbolID: this.symbolID,\r\n      advisedResult,\r\n      timestamp: this.timestamp,\r\n    });\r\n  }\r\n\r\n  public advisedInvestingSide(candles: Candle[], isPartOfStrategy?: boolean): Side {\r\n    const prices = candles.map(candle => +candle[this.field]);\r\n\r\n    const shortValue = this.MAShort.calculate(prices);\r\n    const middleValue = this.MAMiddle.calculate(prices);\r\n    const longValue = this.MALong.calculate(prices);\r\n\r\n    this.updateLastValue(shortValue, middleValue, longValue);\r\n    const {MAShort: prevShort, MAMiddle: prevMiddle, MALong: prevLong} = this.indicatorService.getIndicatorValue(this.symbolID, 2).values;\r\n\r\n    if ((prevLong.value > prevShort.value && longValue < shortValue) ||\r\n      (isPartOfStrategy && longValue < shortValue)) {\r\n      return Side.buy;\r\n    } else if (+candles[candles.length - 1].min < prevMiddle.value) {\r\n      return Side.sell;\r\n    } else {\r\n      return Side.none;\r\n    }\r\n  }\r\n\r\n  private updateLastValue(shortValue: number, middleValue: number, longValue: number): void {\r\n    this.indicatorService.handleIndicatorsUpdate({\r\n      symbolID: this.symbolID,\r\n      values: {\r\n        MAShort: {\r\n          value: shortValue,\r\n          timestamp: this.timestamp,\r\n        },\r\n        MAMiddle: {\r\n          value: middleValue,\r\n          timestamp: this.timestamp,\r\n        },\r\n        MALong: {\r\n          value: longValue,\r\n          timestamp: this.timestamp,\r\n        },\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Side } from '../../models/SharedConstants';\r\nimport { Candle } from '../../models/Candle';\r\nimport { ReplaySubject } from 'rxjs';\r\n\r\nexport enum AvailableStrategies {\r\n  ThreeMAStrategy = 'ThreeMAStrategy',\r\n}\r\n\r\nexport abstract class Strategy {\r\n  public abstract advisedInvestingSide(candles: Candle[], isPartOfStrategy?: boolean): Side;\r\n  // public abstract notifyAboutNewIndicatorValues(params: any): void;\r\n}\r\n","import { ChartFormat } from './ChartFormat';\r\n\r\nexport class CandlesChartFormat extends ChartFormat {\r\n  public x: string[];\r\n  public open: number[];\r\n  public close: number[];\r\n  public high: number[];\r\n  public low: number[];\r\n  public decreasing = {line: {color: 'rgb(235, 77, 92)'}};\r\n  public increasing = {line: {color: 'rgb(83, 185, 135)'}};\r\n  public line = {color: 'rgba(31,119,180,1)'};\r\n  public type: string = 'candlestick';\r\n  public name: string = '';\r\n  public xaxis: string = 'x';\r\n  public yaxis: string = 'y';\r\n}\r\n","export class ChartFormat {\r\n  public x: string[];\r\n  public y?: number[];\r\n  public type: string;\r\n  public name: string = '';\r\n}\r\n","import { ChartFormat } from './ChartFormat';\r\n\r\nexport class ScatterChartFormat extends ChartFormat {\r\n  public x: string[] = [];\r\n  public y: number[] = [];\r\n  public type: string = 'scatter';\r\n  public name: string = '';\r\n}\r\n","export class CurrencyBalance {\r\n  public currency: string;\r\n  public available: string;\r\n  public reserved: string;\r\n}\r\n","export enum Side {\r\n  buy = 'buy',\r\n  sell = 'sell',\r\n  none = 'none',\r\n}\r\n\r\nexport enum Status {\r\n  OPENED = 'OPENED',\r\n  CLOSED = 'CLOSED',\r\n}\r\n\r\nexport enum Period {\r\n  M1 = 'M1',\r\n  M3 = 'M3',\r\n  M5 = 'M5',\r\n  M15 = 'M15',\r\n  M30 = 'M30',\r\n  H1 = 'H1',\r\n  H4 = 'H4',\r\n  D1 = 'D1',\r\n  D7 = 'D7',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { InjectableObservablesService } from './injectable-observables.service';\r\nimport { HitBTCApi } from '../crypto-exchange-module/hitbtc-api.service';\r\nimport { CurrencyBalance } from '../models/CurrencyBalance';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BalanceService {\r\n  private balanceList: CurrencyBalance[] = [];\r\n\r\n  constructor(\r\n    private injectableObservables: InjectableObservablesService,\r\n    private hitBTCApiService: HitBTCApi,\r\n  ) {\r\n    this.injectableObservables.config$.subscribe(() => this.onConfigUpdate());\r\n    // setInterval(() => {\r\n    //   const newobj = this.balanceList;\r\n    //   let v = +newobj[4].available;\r\n    //   v += 1;\r\n    //   newobj[4].available = v.toString();\r\n    //   this.updateBalanceList(newobj);\r\n    // }, 2000);\r\n  }\r\n\r\n  private onConfigUpdate(): void {\r\n    this.hitBTCApiService.getBalance().subscribe((balanceValues: CurrencyBalance[]) => this.updateBalanceList(balanceValues));\r\n  }\r\n\r\n  public updateBalanceList(newBalance: CurrencyBalance[]): void {\r\n    this.balanceList = newBalance.sort((value1, value2) => +value2.available - +value1.available);\r\n    this.notifyAboutNewBalanceValue();\r\n  }\r\n\r\n  public notifyAboutNewBalanceValue(): void {\r\n    this.injectableObservables.balance$.next(this.balanceList);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { InjectableObservablesService } from './injectable-observables.service';\r\nimport { HitBTCApi } from '../crypto-exchange-module/hitbtc-api.service';\r\nimport { Candle, NotificationCandle } from '../models/Candle';\r\n\r\nexport interface ISavedCandles {\r\n  [symbol: string]: Candle[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class CandleService {\r\n  private savedCandles: ISavedCandles = {};\r\n  public count = {};\r\n\r\n  constructor(\r\n    private injectableObservables: InjectableObservablesService,\r\n    private cryptoExchangeService: HitBTCApi,\r\n  ) {}\r\n\r\n  public connectToHitBtcApi(symbol: string): void {\r\n    this.count[symbol] = 0;\r\n    this.cryptoExchangeService.createConnection(symbol);\r\n    this.cryptoExchangeService.subscribeCandles(symbol);\r\n    this.cryptoExchangeService.onMessage(symbol)\r\n      .subscribe((message: any) => {\r\n        switch (message.method) {\r\n          case 'snapshotCandles':\r\n            console.log('snapshotCandles');\r\n            this.savedCandles[message.params.symbol] = [...message.params.data];\r\n            break;\r\n          case 'updateCandles':\r\n            //console.log(`${symbol} - updateCandles - ${this.count[symbol]++}`);\r\n            this.updateSavedCandles(message);\r\n            break;\r\n          default:\r\n            if (!message.result ) {\r\n              console.error('Cant handle unknown method');\r\n              console.error(message);\r\n            }\r\n            break;\r\n        }\r\n      });\r\n  }\r\n\r\n  private updateSavedCandles(message: NotificationCandle): void {\r\n    const symbol = message.params.symbol;\r\n    const updateCandle = message.params.data.pop();\r\n    // console.log(`${symbol} - ${updateCandle.close} - ${updateCandle.timestamp}`);\r\n    const prevCandle = this.savedCandles[symbol][this.savedCandles[symbol].length - 1];\r\n    const prevUpdate: number = +new Date(prevCandle.timestamp);\r\n    const lastUpdate: number = +new Date(updateCandle.timestamp);\r\n    if (lastUpdate - prevUpdate === 0) {\r\n      this.savedCandles[symbol].pop();\r\n    }\r\n    this.savedCandles[symbol] = [...this.savedCandles[symbol], updateCandle];\r\n    this.injectableObservables.candles$.next(this.savedCandles);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { InjectableObservablesService } from './injectable-observables.service';\r\nimport { ScatterChartFormat } from '../models/ChartFormats/ScatterChartFormat';\r\n\r\nexport interface IndicatorModel {\r\n  value: number;\r\n  timestamp: string;\r\n}\r\n\r\nexport interface IndicatorUpdateModel {\r\n  symbolID: string;\r\n  values: {\r\n    [indicatorName: string]: IndicatorModel\r\n  };\r\n}\r\n\r\nexport interface IndicatorPlotModel {\r\n  [symbolID: string]: {\r\n    [indicatorName: string]: ScatterChartFormat;\r\n  };\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class IndicatorService {\r\n  public savedIndicators: IndicatorPlotModel = {};\r\n\r\n  constructor(\r\n    private injectableObservables: InjectableObservablesService,\r\n  ) {}\r\n\r\n  public handleIndicatorsUpdate(indicatorUpdateModel: IndicatorUpdateModel): void {\r\n    Object.keys(indicatorUpdateModel.values).forEach(plotName => {\r\n      const symbolID = indicatorUpdateModel.symbolID;\r\n      const indicatorValuesOfPlot = indicatorUpdateModel.values[plotName];\r\n      if (!this.savedIndicators[symbolID]) {\r\n        this.savedIndicators[symbolID] = {};\r\n      }\r\n      if (!this.savedIndicators[symbolID][plotName]) {\r\n        this.savedIndicators[symbolID][plotName] = new ScatterChartFormat();\r\n        this.savedIndicators[symbolID][plotName].name = plotName;\r\n      }\r\n      this.updateLastIndicator(this.savedIndicators[symbolID][plotName], indicatorValuesOfPlot);\r\n      this.savedIndicators[symbolID][plotName].x.push(indicatorValuesOfPlot.timestamp);\r\n      this.savedIndicators[symbolID][plotName].y.push(indicatorValuesOfPlot.value);\r\n    });\r\n    this.notifyAboutNewIndicatorValues();\r\n  }\r\n\r\n  public getIndicatorValue(symbolID: string, period: number = 1): IndicatorUpdateModel {\r\n    const indicatorValuePeriodsAgo: IndicatorUpdateModel = {\r\n      symbolID,\r\n      values: {},\r\n    };\r\n    Object.keys(this.savedIndicators[symbolID]).forEach(plotName => {\r\n      indicatorValuePeriodsAgo.values[plotName] = {\r\n        value: this.savedIndicators[symbolID][plotName].y.slice(-period).shift(),\r\n        timestamp: this.savedIndicators[symbolID][plotName].x.slice(-period).shift(),\r\n      };\r\n    });\r\n    return indicatorValuePeriodsAgo;\r\n  }\r\n\r\n  private updateLastIndicator(plotObject: ScatterChartFormat, updateIndicator: IndicatorModel): void {\r\n    const lastUpdate: number = +new Date(updateIndicator.timestamp);\r\n    const prevUpdate: number = +new Date(plotObject.x[plotObject.x.length - 1]);\r\n    if (lastUpdate - prevUpdate === 0) {\r\n      plotObject.x.pop();\r\n      plotObject.y.pop();\r\n    }\r\n  }\r\n\r\n  private notifyAboutNewIndicatorValues(): void {\r\n    this.injectableObservables.indicator$.next(this.savedIndicators);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class InjectableObservablesService {\r\n  public config$ = new ReplaySubject();\r\n  public candles$ = new ReplaySubject();\r\n  public indicator$ = new ReplaySubject();\r\n  public positions$ = new ReplaySubject();\r\n  public balance$ = new ReplaySubject();\r\n  public positionAction$ = new ReplaySubject();\r\n  public strategyAction$ = new ReplaySubject();\r\n  public moneyAction$ = new ReplaySubject();\r\n\r\n  constructor() {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { InjectableObservablesService } from './injectable-observables.service';\r\nimport { Side } from '../models/SharedConstants';\r\nimport { HitBTCApi } from '../crypto-exchange-module/hitbtc-api.service';\r\nimport { Symbol } from '../models/Symbol';\r\nimport { zip } from 'rxjs';\r\nimport { CurrencyBalance } from '../models/CurrencyBalance';\r\n\r\ninterface IActionUpdate {\r\n  symbolID: string;\r\n  advisedResult: Side;\r\n  timestamp: string;\r\n}\r\n\r\nexport interface IMoneyUpdate extends IActionUpdate{\r\n  amount: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class MoneyManagerService {\r\n  private config: any;\r\n  private balance: CurrencyBalance[] = [];\r\n\r\n  constructor(\r\n    private injectableObservables: InjectableObservablesService,\r\n    private hitBTCApiService: HitBTCApi,\r\n  ) {\r\n    injectableObservables.strategyAction$.subscribe((actionUpdate: IActionUpdate) => this.handleActionUpdate(actionUpdate));\r\n    injectableObservables.config$.subscribe((configUpdate: any) => this.handleConfigUpdate(configUpdate));\r\n    injectableObservables.balance$.subscribe((balance: CurrencyBalance[]) => this.handleBalanceUpdate(balance));\r\n  }\r\n\r\n  private handleActionUpdate(actionUpdate: IActionUpdate): void {\r\n    if (actionUpdate.advisedResult !== Side.none) {\r\n      this.injectableObservables.moneyAction$.next({\r\n        ...actionUpdate,\r\n        amount: this.countAmountAvailableToPerform(actionUpdate),\r\n      });\r\n    }\r\n  }\r\n\r\n  private countAmountAvailableToPerform(actionUpdate: IActionUpdate): number {\r\n    if (!this.balance.length) {\r\n      return 0;\r\n    }\r\n    switch (actionUpdate.advisedResult) {\r\n      case Side.buy:\r\n        return +this.balance.find(\r\n          (balance: CurrencyBalance) => balance.currency === this.config.symbolInfo[actionUpdate.symbolID].quoteCurrency,\r\n        ).available;\r\n      case Side.sell:\r\n        return +this.balance.find(\r\n          (balance: CurrencyBalance) => balance.currency === this.config.symbolInfo[actionUpdate.symbolID].baseCurrency,\r\n        ).available;\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  private handleConfigUpdate(configUpdate: any): void {\r\n    this.config = configUpdate;\r\n    const arrayOfRequests = configUpdate.availableSymbolsForInvesting.map(symbol => {\r\n      if (configUpdate.symbolInfo[symbol.id]) {\r\n        return;\r\n      }\r\n      return this.hitBTCApiService.getSymbolDescription(symbol.id);\r\n    }).filter(request => request);\r\n    zip(...arrayOfRequests).subscribe((symbolInfo: string[]) => {\r\n      const objForUpd = {};\r\n      symbolInfo.forEach((symbol: string) => {\r\n        const parsedSymbolInfo: Symbol = JSON.parse(symbol);\r\n        objForUpd[parsedSymbolInfo.id] = parsedSymbolInfo;\r\n      });\r\n      this.injectableObservables.config$.next({\r\n        ...configUpdate,\r\n        symbolInfo: objForUpd,\r\n      });\r\n    });\r\n  }\r\n\r\n  private handleBalanceUpdate(balance: CurrencyBalance[]): void {\r\n    this.balance = balance;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Observable } from 'rxjs';\r\n\r\nexport class WSService {\r\n  private ws: WebSocket;\r\n\r\n  constructor(url: string) {\r\n    console.log('WebSocket is inited');\r\n    this.ws = new WebSocket(url);\r\n    this.ws.onclose = (event: any) => {\r\n      console.log('WebSocket is closed now.');\r\n      console.log(event);\r\n      console.log('WebSocket is inited');\r\n      this.ws = new WebSocket(url);\r\n    };\r\n    this.ws.onerror = function(event: any): void {\r\n      console.error('WebSocket error observed:', event);\r\n    };\r\n  }\r\n\r\n  public send(message: any): void {\r\n    this.ws.onopen = () => this.ws.send(JSON.stringify(message));\r\n  }\r\n\r\n  public onMessage(): Observable<MessageEvent> {\r\n    return new Observable<MessageEvent>(observer => {\r\n      this.ws.onmessage = (data: MessageEvent) => observer.next(JSON.parse(data.data));\r\n    });\r\n  }\r\n\r\n  public closeConnection(): void {\r\n    console.log('Connection is closed');\r\n    this.ws.close();\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app-module/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}